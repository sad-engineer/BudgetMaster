package com.sadengineer.budgetmaster.currencies;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.ImageButton;
import android.widget.Toast;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;
import com.sadengineer.budgetmaster.R;
import com.sadengineer.budgetmaster.navigation.BaseNavigationActivity;
import com.sadengineer.budgetmaster.backend.database.DatabaseManager;
import com.sadengineer.budgetmaster.backend.entity.Currency;
import java.util.List;
import java.util.concurrent.CompletableFuture;

public class CurrenciesActivity extends BaseNavigationActivity implements CurrencyAdapter.OnCurrencyClickListener {
    
    private static final String TAG = "CurrenciesActivity";
    
    private RecyclerView recyclerView;
    private CurrencyAdapter adapter;
    private DatabaseManager databaseManager;
    private boolean isActivityActive = true;
    
    /**
     * –°–æ–∑–¥–∞–µ—Ç —ç–∫—Ä–∞–Ω –≤–∞–ª—é—Ç
     * @param savedInstanceState - —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
     */
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_currencies);

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        initializeNavigation();
        setupMenuButton(R.id.menu_button);
        setupBackButton(R.id.back_button);

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è RecyclerView
        setupRecyclerView();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è DatabaseManager
        databaseManager = new DatabaseManager(this);
        Log.d(TAG, "‚úÖ DatabaseManager —Å–æ–∑–¥–∞–Ω");
        Toast.makeText(this, "DatabaseManager —Å–æ–∑–¥–∞–Ω", Toast.LENGTH_SHORT).show();
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∞–ª—é—Ç—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        Log.d(TAG, "üîÑ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≤–∞–ª—é—Ç...");
        Toast.makeText(this, "–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≤–∞–ª—é—Ç...", Toast.LENGTH_SHORT).show();
        loadCurrenciesFromDatabase();

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –≤–∞–ª—é—Ç
        ImageButton addCurrencyButton = findViewById(R.id.add_currency_button);
        ImageButton deleteCurrencyButton = findViewById(R.id.delete_currency_button);

        addCurrencyButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                // –û—Ç–∫—Ä—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–∞–ª—é—Ç—ã
                Intent intent = new Intent(CurrenciesActivity.this, AddCurrencyActivity.class);
                startActivity(intent);
            }
        });

        deleteCurrencyButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ –≤–∞–ª—é—Ç—ã
                Toast.makeText(CurrenciesActivity.this, "–£–¥–∞–ª–∏—Ç—å –≤–∞–ª—é—Ç—É", Toast.LENGTH_SHORT).show();
            }
        });
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç RecyclerView
     */
    private void setupRecyclerView() {
        recyclerView = findViewById(R.id.currencies_recycler_view);
        recyclerView.setLayoutManager(new LinearLayoutManager(this));
        
        adapter = new CurrencyAdapter(this);
        recyclerView.setAdapter(adapter);
    }
    
    /**
     * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤–∞–ª—é—Ç—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
     */
    private void loadCurrenciesFromDatabase() {
        if (!isActivityActive) {
            Log.d(TAG, "‚ö†Ô∏è Activity –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É");
            return;
        }
        
        Log.d(TAG, "üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∞–ª—é—Ç—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...");
        
        // –°–Ω–∞—á–∞–ª–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        databaseManager.initializeDatabase().thenAccept(initResult -> {
            if (initResult) {
                Log.d(TAG, "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞");
                runOnUiThread(() -> {
                    Toast.makeText(this, "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞", Toast.LENGTH_SHORT).show();
                });
                
                // –ó–∞—Ç–µ–º –∑–∞–≥—Ä—É–∂–∞–µ–º –≤–∞–ª—é—Ç—ã
                databaseManager.executeDatabaseOperation(() -> {
                    com.sadengineer.budgetmaster.backend.database.BudgetMasterDatabase database = 
                        com.sadengineer.budgetmaster.backend.database.BudgetMasterDatabase.getDatabase(this);
                    List<Currency> currencies = database.currencyDao().getAllActiveCurrencies();
                    database.close();
                    return currencies;
                }).thenAccept(currencies -> {
                    Log.d(TAG, "‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –≤–∞–ª—é—Ç: " + (currencies != null ? currencies.size() : 0));
                    
                    runOnUiThread(() -> {
                        try {
                            if (!isActivityActive || isFinishing() || isDestroyed()) {
                                Log.d(TAG, "‚ö†Ô∏è Activity –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞ –∏–ª–∏ —É–Ω–∏—á—Ç–æ–∂–∞–µ—Ç—Å—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI");
                                return;
                            }
                            if (currencies != null && !currencies.isEmpty()) {
                                adapter.setCurrencies(currencies);
                                Log.d(TAG, "‚úÖ –í–∞–ª—é—Ç—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã –≤ —Å–ø–∏—Å–∫–µ");
                                Toast.makeText(this, "–ó–∞–≥—Ä—É–∂–µ–Ω–æ –≤–∞–ª—é—Ç: " + currencies.size(), Toast.LENGTH_LONG).show();
                            } else {
                                Log.w(TAG, "‚ö†Ô∏è –í–∞–ª—é—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö");
                                Toast.makeText(this, "–í–∞–ª—é—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã", Toast.LENGTH_SHORT).show();
                            }
                        } catch (Exception e) {
                            Log.e(TAG, "‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI: " + e.getMessage(), e);
                        }
                    });
                }).exceptionally(throwable -> {
                    Log.e(TAG, "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∞–ª—é—Ç: " + throwable.getMessage(), throwable);
                    runOnUiThread(() -> {
                        try {
                            if (!isActivityActive || isFinishing() || isDestroyed()) {
                                Log.d(TAG, "‚ö†Ô∏è Activity –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞ –∏–ª–∏ —É–Ω–∏—á—Ç–æ–∂–∞–µ—Ç—Å—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI");
                                return;
                            }
                            Toast.makeText(this, "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∞–ª—é—Ç: " + throwable.getMessage(), Toast.LENGTH_LONG).show();
                        } catch (Exception e) {
                            Log.e(TAG, "‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI: " + e.getMessage(), e);
                        }
                    });
                    return null;
                });
            } else {
                Log.e(TAG, "‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö");
                runOnUiThread(() -> {
                    Toast.makeText(this, "–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö", Toast.LENGTH_SHORT).show();
                });
            }
        }).exceptionally(throwable -> {
            Log.e(TAG, "‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: " + throwable.getMessage(), throwable);
            runOnUiThread(() -> {
                Toast.makeText(this, "–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: " + throwable.getMessage(), Toast.LENGTH_LONG).show();
            });
            return null;
        });
    }
    
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–ª–∏–∫ –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç–µ —Å–ø–∏—Å–∫–∞
     * @param currency - –≤—ã–±—Ä–∞–Ω–Ω–∞—è –≤–∞–ª—é—Ç–∞
     */
    @Override
    public void onCurrencyClick(Currency currency) {
        Log.d(TAG, "üëÜ –í—ã–±—Ä–∞–Ω–∞ –≤–∞–ª—é—Ç–∞: " + currency.getTitle() + " (ID: " + currency.getId() + ")");
        Toast.makeText(this, "–í—ã–±—Ä–∞–Ω–∞ –≤–∞–ª—é—Ç–∞: " + currency.getTitle(), Toast.LENGTH_SHORT).show();
    }
    
    /**
     * –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ Activity
     */
    @Override
    protected void onStart() {
        super.onStart();
        Log.d(TAG, " CurrenciesActivity –∑–∞–ø—É—â–µ–Ω–∞");
    }

    /**
     * –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ Activity
     */
    @Override
    protected void onStop() {
        super.onStop();
        isActivityActive = false;
        Log.d(TAG, " CurrenciesActivity –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞");
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
        if (databaseManager != null) {
            try {
                // –û—Ç–º–µ–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –ë–î
                databaseManager.shutdown();
            } catch (Exception e) {
                Log.e(TAG, "‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ DatabaseManager: " + e.getMessage(), e);
            }
        }
    }

    /**
     * –ü—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –ø–∞—É–∑–µ Activity
     */
    @Override
    protected void onPause() {
        super.onPause();
        isActivityActive = false;
        Log.d(TAG, "‚è∏Ô∏è CurrenciesActivity –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞");
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI –∫–æ–≥–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∞–∫—Ç–∏–≤–Ω–æ
        if (databaseManager != null) {
            // –û—Ç–º–µ–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –ë–î
        }
    }

    /**
     * –í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ Activity
     */
    @Override
    protected void onResume() {
        super.onResume();
        isActivityActive = true;
        Log.d(TAG, "‚ñ∂Ô∏è CurrenciesActivity –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∞");
        // –í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–±–æ—Ç—É –∫–æ–≥–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–Ω–æ–≤–∞ –∞–∫—Ç–∏–≤–Ω–æ
        if (adapter != null && adapter.getItemCount() == 0) {
            loadCurrenciesFromDatabase();
        }
    }
    
    /**
     * –£–Ω–∏—á—Ç–æ–∂–∞–µ—Ç—Å—è –ø—Ä–∏ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–∏ Activity
     */
    @Override
    protected void onDestroy() {
        super.onDestroy();
        isActivityActive = false;
        Log.d(TAG, " CurrenciesActivity —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∞");
        if (databaseManager != null) {
            try {
                databaseManager.shutdown();
            } catch (Exception e) {
                Log.e(TAG, "‚ùå –û—à–∏–±–∫–∞ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è DatabaseManager: " + e.getMessage(), e);
            }
        }
    }
} 