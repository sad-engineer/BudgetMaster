package com.sadengineer.budgetmaster.budget;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.ImageButton;

import androidx.viewpager2.widget.ViewPager2;
import androidx.lifecycle.ViewModelProvider;

import com.sadengineer.budgetmaster.R;
import com.sadengineer.budgetmaster.navigation.BaseNavigationActivity;
import com.sadengineer.budgetmaster.backend.entity.Budget;

import com.google.android.material.tabs.TabLayout;
import com.google.android.material.tabs.TabLayoutMediator;

import java.util.List;
import java.util.ArrayList;

public class BudgetActivity extends BaseNavigationActivity {

    private static final String TAG = "BudgetActivity";
    
    private TabLayout tabLayout;
    private ViewPager2 viewPager;
    private BudgetPagerAdapter pagerAdapter;
    private ImageButton addBudgetButton;
    private ImageButton deleteBudgetButton;
    private boolean isSelectionMode = false;
    private BudgetSharedViewModel viewModel;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_budget);

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        initializeNavigation();
        setupMenuButton(R.id.menu_button);
        setupBackButton(R.id.back_button);

        // Shared ViewModel –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∂–∏–º–æ–º –≤—ã–±–æ—Ä–∞ –∏ –º—è–≥–∫–∏–º —É–¥–∞–ª–µ–Ω–∏–µ–º
        viewModel = new ViewModelProvider(this).get(BudgetSharedViewModel.class);

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –±—é–¥–∂–µ—Ç–∞
        setupButtons();

        // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ —Ä–µ–∂–∏–º–æ–º –≤—ã–±–æ—Ä–∞, —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–ª—è—Ç—å –∏–∫–æ–Ω–∫–∏
        viewModel.getSelectionMode().observe(this, enabled -> {
            isSelectionMode = Boolean.TRUE.equals(enabled);
            if (isSelectionMode) {
                addBudgetButton.setImageResource(R.drawable.ic_save);
                deleteBudgetButton.setImageResource(R.drawable.ic_back);
            } else {
                addBudgetButton.setImageResource(R.drawable.ic_add);
                deleteBudgetButton.setImageResource(R.drawable.ic_delete);
            }
        });

        // –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –º—è–≥–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
        viewModel.getSoftDeletionDone().observe(this, count -> {
            if (count != null) {
                Log.d(TAG, "‚úÖ –ú—è–≥–∫–æ —É–¥–∞–ª–µ–Ω–æ –±—é–¥–∂–µ—Ç–æ–≤: " + count);
            }
        });

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ViewPager2 –∏ TabLayout
        setupViewPager();
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∫–Ω–æ–ø–∫–∏
     */
    private void setupButtons() {
        addBudgetButton = findViewById(R.id.add_budget_button_bottom);
        deleteBudgetButton = findViewById(R.id.delete_budget_button_bottom);

        addBudgetButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (isSelectionMode) {
                    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –±—é–¥–∂–µ—Ç—ã (–º—è–≥–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ)
                    BudgetLimitsFragment fragment = getCurrentFragment();
                    if (fragment != null) {
                        List<Budget> selectedBudgets = fragment.getSelectedBudgets();
                        if (selectedBudgets != null && !selectedBudgets.isEmpty()) {
                            viewModel.softDeleteSelectedBudgets(selectedBudgets);
                        }
                    }
                } else {
                    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –±—é–¥–∂–µ—Ç
                    Log.d(TAG, "üëÜ –î–æ–±–∞–≤–∏—Ç—å –±—é–¥–∂–µ—Ç");
                    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞
                }
            }
        });

        deleteBudgetButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (isSelectionMode) {
                    // –û—Ç–º–µ–Ω—è–µ–º –≤—ã–±–æ—Ä
                    viewModel.setSelectionMode(false);
                } else {
                    // –í–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º –≤—ã–±–æ—Ä–∞
                    viewModel.setSelectionMode(true);
                }
            }
        });
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç ViewPager2 –∏ TabLayout
     */
    private void setupViewPager() {
        viewPager = findViewById(R.id.budget_view_pager);
        tabLayout = findViewById(R.id.budget_tab_layout);

        // –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–∞–ø—Ç–µ—Ä–∞ –¥–ª—è ViewPager2
        pagerAdapter = new BudgetPagerAdapter(this);
        viewPager.setAdapter(pagerAdapter);

        // –°–≤—è–∑—ã–≤–∞–Ω–∏–µ TabLayout —Å ViewPager2
        new TabLayoutMediator(tabLayout, viewPager, (tab, position) -> {
            switch (position) {
                case 0:
                    tab.setText(R.string.tab_limits);
                    break;
                case 1:
                    tab.setText(R.string.tab_remaining);
                    break;
            }
        }).attach();
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç
     */
    private BudgetLimitsFragment getCurrentFragment() {
        if (viewPager.getCurrentItem() == 0) {
            return (BudgetLimitsFragment) pagerAdapter.getFragment(0);
        }
        return null;
    }
    
    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
     */
    public void updateSelectionCount(int count) {
        Log.d(TAG, "üîÑ –í—ã–±—Ä–∞–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: " + count);
        // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤ UI
    }
} 