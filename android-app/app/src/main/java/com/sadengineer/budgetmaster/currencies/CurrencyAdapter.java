package com.sadengineer.budgetmaster.currencies;

import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.sadengineer.budgetmaster.R;
import com.sadengineer.budgetmaster.backend.entity.Currency;
import com.sadengineer.budgetmaster.animations.StandartViewHolder;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

/**
 * –ê–¥–∞–ø—Ç–µ—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–∞–ª—é—Ç –≤ RecyclerView
 */
public class CurrencyAdapter extends RecyclerView.Adapter<StandartViewHolder> {
    private static final String TAG = "CurrencyAdapter";

    private List<Currency> currencies = new ArrayList<>();
    private OnCurrencyClickListener listener;
    private OnCurrencyLongClickListener longClickListener;
    private boolean isSelectionMode = false;
    private Set<Integer> selectedCurrencies = new HashSet<>();
    
    /**
     * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–∫–æ–≤ –Ω–∞ –≤–∞–ª—é—Ç–µ
     */
    public interface OnCurrencyClickListener {
        void onCurrencyClick(Currency currency);
    }
    
    /**
     * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–ª–∏–Ω–Ω—ã—Ö –∫–ª–∏–∫–æ–≤ –Ω–∞ –≤–∞–ª—é—Ç–µ
     */
    public interface OnCurrencyLongClickListener {
        void onCurrencyLongClick(Currency currency);
    }
    
    /**
     * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∞–¥–∞–ø—Ç–µ—Ä–∞
     */
    public CurrencyAdapter(OnCurrencyClickListener listener) {
        this.listener = listener;
    }
    
    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª–∏–Ω–Ω—ã—Ö –∫–ª–∏–∫–æ–≤
     */
    public void setLongClickListener(OnCurrencyLongClickListener longClickListener) {
        this.longClickListener = longClickListener;
    }
    
    /**
     * –°–æ–∑–¥–∞–µ—Ç ViewHolder –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞
     */
    @NonNull
    @Override
    public StandartViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(parent.getContext())
                .inflate(R.layout.item_currency, parent, false);
        StandartViewHolder holder = new StandartViewHolder(view);
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ ViewHolder
        holder.setItemClickListener(itemId -> {
            if (listener != null) {
                Currency currency = findCurrencyById(itemId);
                if (currency != null) {
                    listener.onCurrencyClick(currency);
                }
            }
        });
        
        holder.setItemLongClickListener(itemId -> {
            if (longClickListener != null) {
                Currency currency = findCurrencyById(itemId);
                if (currency != null) {
                    longClickListener.onCurrencyLongClick(currency);
                }
            }
        });

        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
        holder.setItemSelectionListener((itemId, isSelected) -> {
            if (isSelected) {
                selectedCurrencies.add(itemId);
            } else {
                selectedCurrencies.remove(itemId);
            }
        });
        
        return holder;
    }
    
    /**
     * –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∫ ViewHolder
     */
    @Override
    public void onBindViewHolder(@NonNull StandartViewHolder holder, int position) {
        Currency currency = currencies.get(position);
        holder.resetToInitialState();

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –≤—ã–±—Ä–∞–Ω –ª–∏ —Ç–µ–∫—É—â–∏–π —ç–ª–µ–º–µ–Ω—Ç
        boolean isSelected = selectedCurrencies.contains(currency.getId());

        Log.d(TAG, "üîÑ –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫ ViewHolder: " + currency.getTitle() + " (–ø–æ–∑–∏—Ü–∏—è " + currency.getPosition() + ")" +
        "ID: " + currency.getId() + ", —Ä–µ–∂–∏–º –≤—ã–±–æ—Ä–∞: " + isSelectionMode + ", –≤—ã–±—Ä–∞–Ω: " + isSelected); 
        holder.bind(currency.getPosition(), currency.getTitle(), currency.getId(), 
                   isSelectionMode, isSelected);
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å–ø–∏—Å–∫–µ –≤–∞–ª—é—Ç
     */
    @Override
    public int getItemCount() {
        return currencies.size();
    }
    
    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –≤–∞–ª—é—Ç –∏ —É–≤–µ–¥–æ–º–ª—è–µ—Ç –∞–¥–∞–ø—Ç–µ—Ä –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
     */
    public void setCurrencies(List<Currency> currencies) {
        this.currencies = currencies != null ? currencies : new ArrayList<>();
        Log.d(TAG, "üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –≤–∞–ª—é—Ç: " + this.currencies.size() + " —ç–ª–µ–º–µ–Ω—Ç–æ–≤");
        notifyDataSetChanged();
    }
    
    /**
     * –í–∫–ª—é—á–∞–µ—Ç/–≤—ã–∫–ª—é—á–∞–µ—Ç —Ä–µ–∂–∏–º –≤—ã–±–æ—Ä–∞ –∏ –æ—á–∏—â–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –≤–∞–ª—é—Ç—ã
     */
    public void setSelectionMode(boolean enabled) {
        this.isSelectionMode = enabled;
        if (!enabled) {
            selectedCurrencies.clear();
        }
        notifyDataSetChanged();
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –≤–∞–ª—é—Ç
     */
    public List<Currency> getSelectedCurrencies() {
        List<Currency> selected = new ArrayList<>();
        for (Integer id : selectedCurrencies) {
            Currency currency = findCurrencyById(id);
            if (currency != null) {
                selected.add(currency);
            }
        }
        return selected;
    }
    
    /**
     * –û—á–∏—â–∞–µ—Ç –≤—ã–±–æ—Ä –∏ —É–≤–µ–¥–æ–º–ª—è–µ—Ç –∞–¥–∞–ø—Ç–µ—Ä –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
     */
    public void clearSelection() {
        selectedCurrencies.clear();
        notifyDataSetChanged();
    }
    
    /**
     * –ù–∞—Ö–æ–¥–∏—Ç –≤–∞–ª—é—Ç—É –ø–æ –µ—ë ID
     */
    private Currency findCurrencyById(int id) {
        for (Currency currency : currencies) {
            if (currency.getId() == id) {
                return currency;
            }
        }
        return null;
    }
} 