package com.sadengineer.budgetmaster.budget;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.app.AlertDialog;
import android.content.DialogInterface;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;
import androidx.lifecycle.ViewModelProvider;
import androidx.recyclerview.widget.RecyclerView;
import androidx.recyclerview.widget.LinearLayoutManager;

import com.sadengineer.budgetmaster.R;
import com.sadengineer.budgetmaster.backend.database.BudgetMasterDatabase;
import com.sadengineer.budgetmaster.backend.entity.Budget;
import com.sadengineer.budgetmaster.backend.entity.Category;
import com.sadengineer.budgetmaster.backend.entity.Currency;

import com.sadengineer.budgetmaster.backend.service.BudgetService;
import com.sadengineer.budgetmaster.navigation.BaseNavigationActivity;

import java.util.List;
import java.util.ArrayList;

public class BudgetLimitsFragment extends Fragment {
    private static final String TAG = "BudgetLimitsFragment";
    private RecyclerView recyclerView;
    private BudgetAdapter adapter;
    private BudgetSharedViewModel viewModel;

    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.fragment_budget_limits, container, false);
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º RecyclerView
        recyclerView = view.findViewById(R.id.budget_limits_recycler);
        recyclerView.setLayoutManager(new LinearLayoutManager(getContext()));
        
        // Shared ViewModel –∏–∑ Activity
        viewModel = new ViewModelProvider(requireActivity()).get(BudgetSharedViewModel.class);

        // –°–æ–∑–¥–∞–µ–º –∞–¥–∞–ø—Ç–µ—Ä
        setupAdapter();

        // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ —Ä–µ–∂–∏–º–æ–º –≤—ã–±–æ—Ä–∞ –∏–∑ Shared ViewModel
        viewModel.getSelectionMode().observe(getViewLifecycleOwner(), enabled -> {
            if (adapter != null) {
                adapter.setSelectionMode(Boolean.TRUE.equals(enabled));
            }
        });
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –±—é–¥–∂–µ—Ç—ã
        loadBudgets();
        
        return view;
    }
    
    /**
     * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –±—é–¥–∂–µ—Ç—ã
     */
    private void loadBudgets() {
        Log.d(TAG, "üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –±—é–¥–∂–µ—Ç—ã...");
        
        try {
            BudgetMasterDatabase database = BudgetMasterDatabase.getDatabase(requireContext());
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –±—é–¥–∂–µ—Ç—ã
            database.budgetDao().getAll().observe(getViewLifecycleOwner(), budgets -> {
                Log.d(TAG, "‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –±—é–¥–∂–µ—Ç–æ–≤: " + (budgets != null ? budgets.size() : 0));
                
                if (budgets != null && !budgets.isEmpty()) {
                    adapter.setBudgets(budgets);
                    Log.d(TAG, "‚úÖ –ë—é–¥–∂–µ—Ç—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã –≤ —Å–ø–∏—Å–∫–µ");
                    
                    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ —Å–≤–∞–π–ø–æ–≤ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Å–ø–∏—Å–∫–∞
                    if (getActivity() instanceof BaseNavigationActivity) {
                        ((BaseNavigationActivity) getActivity()).resetSwipeCount();
                    }
                } else {
                    Log.w(TAG, "‚ö†Ô∏è –ë—é–¥–∂–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö");
                }
            });
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏–π
            database.categoryDao().getAll().observe(getViewLifecycleOwner(), categories -> {
                Log.d(TAG, "‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: " + (categories != null ? categories.size() : 0));
                if (categories != null) {
                    adapter.setCategories(categories);
                }
            });
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∞–ª—é—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏–π
            database.currencyDao().getAll().observe(getViewLifecycleOwner(), currencies -> {
                Log.d(TAG, "‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –≤–∞–ª—é—Ç: " + (currencies != null ? currencies.size() : 0));
                if (currencies != null) {
                    adapter.setCurrencies(currencies);
                }
            });
            
        } catch (Exception e) {
            Log.e(TAG, "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±—é–¥–∂–µ—Ç–æ–≤: " + e.getMessage(), e);
        }
    }
    
    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä–µ–∂–∏–º –≤—ã–±–æ—Ä–∞
     */
    public void setSelectionMode(boolean enabled) {
        if (adapter != null) {
            adapter.setSelectionMode(enabled);
        }
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∞–¥–∞–ø—Ç–µ—Ä
     */
    private void setupAdapter() {
        adapter = new BudgetAdapter();
        recyclerView.setAdapter(adapter);
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ª—É—à–∞—Ç–µ–ª–∏
        adapter.setClickListener(budget -> {
            Log.d(TAG, "üëÜ –ö–ª–∏–∫ –ø–æ –±—é–¥–∂–µ—Ç—É: " + budget.getId());
            openBudgetEdit(budget);
        });
        
        adapter.setLongClickListener(budget -> {
            Log.d(TAG, "üëÜ –î–ª–∏—Ç–µ–ª—å–Ω—ã–π –∫–ª–∏–∫ –ø–æ –±—é–¥–∂–µ—Ç—É: " + budget.getId());
            showDeleteConfirmationDialog(budget);
        });
        
        adapter.setSelectionListener(selectedCount -> {
            Log.d(TAG, "üîÑ –í—ã–±—Ä–∞–Ω–æ –±—é–¥–∂–µ—Ç–æ–≤: " + selectedCount);
            // –£–≤–µ–¥–æ–º–ª—è–µ–º Activity –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            if (getActivity() instanceof BudgetActivity) {
                ((BudgetActivity) getActivity()).updateSelectionCount(selectedCount);
            }
        });
    }
    
    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è
     */
    private void showDeleteConfirmationDialog(Budget budget) {
        new AlertDialog.Builder(requireContext())
            .setTitle("–£–¥–∞–ª–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞")
            .setMessage("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –±—é–¥–∂–µ—Ç? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.")
            .setPositiveButton("–£–¥–∞–ª–∏—Ç—å", (dialog, which) -> {
                deleteBudget(budget);
            })
            .setNegativeButton("–û—Ç–º–µ–Ω–∞", null)
            .show();
    }
    
    /**
     * –£–¥–∞–ª—è–µ—Ç –±—é–¥–∂–µ—Ç
     */
    private void deleteBudget(Budget budget) {
        try {
            BudgetMasterDatabase database = BudgetMasterDatabase.getDatabase(requireContext());
            BudgetService budgetService = new BudgetService(requireContext(), "system");
            
            budgetService.delete(false, budget); // false = hard delete
            Log.d(TAG, "‚úÖ –ë—é–¥–∂–µ—Ç —É–¥–∞–ª–µ–Ω: " + budget.getId());
        } catch (Exception e) {
            Log.e(TAG, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –±—é–¥–∂–µ—Ç–∞: " + e.getMessage(), e);
        }
    }
    
    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –±—é–¥–∂–µ—Ç—ã
     */
    public List<Budget> getSelectedBudgets() {
        if (adapter != null) {
            return adapter.getSelectedBudgets();
        }
        return new ArrayList<>();
    }
    
    /**
     * –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –æ–∫–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±—é–¥–∂–µ—Ç–∞
     */
    private void openBudgetEdit(Budget budget) {
        Intent intent = new Intent(requireContext(), BudgetEditActivity.class);
        intent.putExtra("budget_id", budget.getId());
        startActivity(intent);
        Log.d(TAG, "üîÑ –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞ ID: " + budget.getId());
    }
} 