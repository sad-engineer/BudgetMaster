package com.sadengineer.budgetmaster.accounts;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.ImageButton;

import androidx.recyclerview.widget.RecyclerView;
import androidx.recyclerview.widget.LinearLayoutManager;

import com.sadengineer.budgetmaster.R;
import com.sadengineer.budgetmaster.navigation.BaseNavigationActivity;
import com.sadengineer.budgetmaster.backend.entity.Account;
import com.sadengineer.budgetmaster.backend.database.BudgetMasterDatabase;
import com.sadengineer.budgetmaster.backend.service.AccountService;

import androidx.viewpager2.widget.ViewPager2;
import com.google.android.material.tabs.TabLayout;
import com.google.android.material.tabs.TabLayoutMediator;

import java.util.List;
import java.util.ArrayList;
import androidx.fragment.app.Fragment;

/**
 * Activity –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Å—á–µ—Ç–æ–≤
 */
public class AccountsActivity extends BaseNavigationActivity {
    
    private static final String TAG = "AccountsActivity";
    
    private ImageButton addAccountButton;
    private ImageButton deleteAccountButton;
    private AccountService accountService;
    private TabLayout tabLayout;
    private ViewPager2 viewPager;
    private boolean isSelectionMode = false;

    /**
     * –ú–µ—Ç–æ–¥ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ Activity
     * @param savedInstanceState - —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ Activity
     */
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_accounts);

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        initializeNavigation();
        setupMenuButton(R.id.menu_button);
        setupBackButton(R.id.back_button);

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AccountService
        accountService = new AccountService(this, "default_user");

        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º TabLayout –∏ ViewPager2
        setupViewPager();
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ —Å—á–µ—Ç–æ–≤
        setupButtons();
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç ViewPager2 –∏ TabLayout
     */
    private void setupViewPager() {
        tabLayout = findViewById(R.id.accounts_tab_layout);
        viewPager = findViewById(R.id.accounts_view_pager);

        AccountsPagerAdapter adapter = new AccountsPagerAdapter(this);
        viewPager.setAdapter(adapter);

        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω–¥–µ–∫—Å –≤–∫–ª–∞–¥–∫–∏ –∏–∑ Intent (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 0)
        int tabIndex = getIntent().getIntExtra("selected_tab", 0);
        viewPager.setCurrentItem(tabIndex, false);
        Log.d(TAG, "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–∫–ª–∞–¥–∫—É: " + tabIndex);

        new TabLayoutMediator(tabLayout, viewPager,
            (tab, position) -> {
                switch (position) {
                    case 0: tab.setText(getString(R.string.tab_current)); break;
                    case 1: tab.setText(getString(R.string.tab_savings)); break;
                    case 2: tab.setText(getString(R.string.tab_transfers)); break;
                }
            }
        ).attach();
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∫–Ω–æ–ø–∫–∏
     */
    private void setupButtons() {
        addAccountButton = findViewById(R.id.add_account_button_bottom);
        deleteAccountButton = findViewById(R.id.delete_account_button_bottom);

        /**
         * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—á–µ—Ç–∞
         */
        addAccountButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (isSelectionMode) {
                    // –í —Ä–µ–∂–∏–º–µ –≤—ã–±–æ—Ä–∞ - —É–¥–∞–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Å—á–µ—Ç–∞
                    deleteSelectedAccounts();
                } else {
                    // –ó–∞–ø—É—Å–∫–∞–µ–º –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–∏—è —Å—á–µ—Ç–∞
                    Intent intent = new Intent(AccountsActivity.this, AccountsEditActivity.class);
                    // –ü–µ—Ä–µ–¥–∞–µ–º —Ç–µ–∫—É—â—É—é –≤–∫–ª–∞–¥–∫—É
                    intent.putExtra("source_tab", viewPager.getCurrentItem());
                    startActivity(intent);
                }
            }
        });

        /**
         * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–µ–Ω–∏—è —Å—á–µ—Ç–æ–≤
         */
        deleteAccountButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (isSelectionMode) {
                    // –í —Ä–µ–∂–∏–º–µ –≤—ã–±–æ—Ä–∞ - –æ—Ç–º–µ–Ω—è–µ–º –≤—ã–±–æ—Ä
                    cancelSelectionMode();
                } else {
                    // –í–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º –≤—ã–±–æ—Ä–∞
                    enableSelectionMode();
                }
            }
        });
    }
    
    /**
     * –í–∫–ª—é—á–∞–µ—Ç —Ä–µ–∂–∏–º –≤—ã–±–æ—Ä–∞ —Å—á–µ—Ç–æ–≤
     */
    private void enableSelectionMode() {
        isSelectionMode = true;
        
        // –ú–µ–Ω—è–µ–º –∏–∫–æ–Ω–∫–∏ –∫–Ω–æ–ø–æ–∫
        addAccountButton.setImageResource(R.drawable.ic_save);
        deleteAccountButton.setImageResource(R.drawable.ic_back);
        
        // –£–≤–µ–¥–æ–º–ª—è–µ–º –≤—Å–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã –æ –≤–∫–ª—é—á–µ–Ω–∏–∏ —Ä–µ–∂–∏–º–∞ –≤—ã–±–æ—Ä–∞
        notifyFragmentsSelectionMode(true);
        
        Log.d(TAG, "‚úÖ –†–µ–∂–∏–º –≤—ã–±–æ—Ä–∞ —Å—á–µ—Ç–æ–≤ –≤–∫–ª—é—á–µ–Ω");
    }
    
    /**
     * –û—Ç–º–µ–Ω—è–µ—Ç —Ä–µ–∂–∏–º –≤—ã–±–æ—Ä–∞
     */
    private void cancelSelectionMode() {
        isSelectionMode = false;
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–∫–æ–Ω–∫–∏ –∫–Ω–æ–ø–æ–∫
        addAccountButton.setImageResource(R.drawable.ic_add);
        deleteAccountButton.setImageResource(R.drawable.ic_delete);
        
        // –£–≤–µ–¥–æ–º–ª—è–µ–º –≤—Å–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã –æ–± –æ—Ç–º–µ–Ω–µ —Ä–µ–∂–∏–º–∞ –≤—ã–±–æ—Ä–∞
        notifyFragmentsSelectionMode(false);
        
        Log.d(TAG, "‚ùå –†–µ–∂–∏–º –≤—ã–±–æ—Ä–∞ —Å—á–µ—Ç–æ–≤ –æ—Ç–º–µ–Ω–µ–Ω");
    }
    
    /**
     * –£–¥–∞–ª—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Å—á–µ—Ç–∞
     */
    private void deleteSelectedAccounts() {
        // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Å—á–µ—Ç–∞ –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞
        List<Account> selectedAccounts = getSelectedAccountsFromCurrentFragment();
        
        Log.d(TAG, "üóëÔ∏è –£–¥–∞–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Å—á–µ—Ç–∞: " + selectedAccounts.size());
        
        // –£–¥–∞–ª—è–µ–º —Å—á–µ—Ç–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        for (Account account : selectedAccounts) {
            try {
                accountService.softDelete(account);
                Log.d(TAG, "‚úÖ –£–¥–∞–ª–µ–Ω —Å—á–µ—Ç: " + account.getTitle());
            } catch (Exception e) {
                Log.e(TAG, "‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å—á–µ—Ç–∞ " + account.getTitle() + ": " + e.getMessage(), e);
            }
        }
        
        // –û—Ç–º–µ–Ω—è–µ–º —Ä–µ–∂–∏–º –≤—ã–±–æ—Ä–∞
        cancelSelectionMode();
        Log.d(TAG, "‚úÖ –£–¥–∞–ª–µ–Ω–æ —Å—á–µ—Ç–æ–≤: " + selectedAccounts.size());
    }
    
    /**
     * –£–≤–µ–¥–æ–º–ª—è–µ—Ç —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã –æ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–µ–∂–∏–º–∞ –≤—ã–±–æ—Ä–∞
     */
    private void notifyFragmentsSelectionMode(boolean enabled) {
        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç
        int currentPosition = viewPager.getCurrentItem();
        Fragment currentFragment = getSupportFragmentManager()
            .findFragmentByTag("f" + currentPosition);
        
        if (currentFragment instanceof CurrentAccountsFragment) {
            ((CurrentAccountsFragment) currentFragment).setSelectionMode(enabled);
        } else if (currentFragment instanceof SavingsAccountsFragment) {
            ((SavingsAccountsFragment) currentFragment).setSelectionMode(enabled);
        } else if (currentFragment instanceof TransfersAccountsFragment) {
            ((TransfersAccountsFragment) currentFragment).setSelectionMode(enabled);
        }
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Å—á–µ—Ç–∞ –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞
     */
    private List<Account> getSelectedAccountsFromCurrentFragment() {
        int currentPosition = viewPager.getCurrentItem();
        Fragment currentFragment = getSupportFragmentManager()
            .findFragmentByTag("f" + currentPosition);
        
        if (currentFragment instanceof CurrentAccountsFragment) {
            return ((CurrentAccountsFragment) currentFragment).getSelectedAccounts();
        } else if (currentFragment instanceof SavingsAccountsFragment) {
            return ((SavingsAccountsFragment) currentFragment).getSelectedAccounts();
        } else if (currentFragment instanceof TransfersAccountsFragment) {
            return ((TransfersAccountsFragment) currentFragment).getSelectedAccounts();
        }
        
        return new ArrayList<>();
    }
}