package com.sadengineer.budgetmaster.animations;

import android.animation.ObjectAnimator;
import android.animation.ValueAnimator;
import android.view.View;
import android.widget.CheckBox;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.sadengineer.budgetmaster.R;

import java.util.Set;

/**
 * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π ViewHolder –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –≤—ã–±–æ—Ä–∞
 */
public class StandartViewHolder extends RecyclerView.ViewHolder {
    private static final String TAG = "StandartViewHolder";
    
    // –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π
    // –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ —á–µ–∫–±–æ–∫—Å–∞
    private static final int CHECKBOX_ANIMATION_DELAY = 300;
    // –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ —Å–º–µ—â–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
    private static final int TEXT_PADDING_ANIMATION_DELAY = 300;
    // –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ—è–≤–ª–µ–Ω–∏—è —á–µ–∫–±–æ–∫—Å–∞
    private static final int CHECKBOX_FADE_IN_DURATION = 300;
    // –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è —á–µ–∫–±–æ–∫—Å–∞
    private static final int CHECKBOX_FADE_OUT_DURATION = 200;
    // –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏ —Å–º–µ—â–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
    private static final int TEXT_PADDING_ANIMATION_DURATION = 300;
    // —Ä–∞–∑–º–µ—Ä –æ—Ç—Å—Ç—É–ø–∞ —Ç–µ–∫—Å—Ç–∞
    private static final int TEXT_PADDING_DP = 50;

    // —á–µ–∫–±–æ–∫—Å
    private CheckBox checkbox;
    private TextView positionText;
    private TextView titleText;
    private TextView idText;
    
    private boolean isSelectionMode = false;
    private Set<Integer> selectedIds;
    private OnItemClickListener itemClickListener;
    private OnSelectionChangedListener selectionListener;
    
    public interface OnItemClickListener {
        void onItemClick(int itemId);
    }
    
    public interface OnSelectionChangedListener {
        void onSelectionChanged(int selectedCount);
    }
    
    /**
     * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä ViewHolder
     */
    public StandartViewHolder(@NonNull View itemView) {
        super(itemView);
        checkbox = itemView.findViewById(R.id.currency_checkbox);
        positionText = itemView.findViewById(R.id.currency_position);
        titleText = itemView.findViewById(R.id.currency_title);
        idText = itemView.findViewById(R.id.currency_id);
        
        setupClickListeners();
    }
    
    /**
     * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∏–∫–æ–≤
     */
    private void setupClickListeners() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –≤–µ—Å—å —ç–ª–µ–º–µ–Ω—Ç
        itemView.setOnClickListener(v -> {
            int position = getAdapterPosition();
            if (position != RecyclerView.NO_POSITION && itemClickListener != null) {
                if (isSelectionMode) {
                    // –í —Ä–µ–∂–∏–º–µ –≤—ã–±–æ—Ä–∞ - –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º —á–µ–∫–±–æ–∫—Å
                    int itemId = getCurrentItemId();
                    if (itemId != -1) {
                        toggleSelection(itemId);
                    }
                } else {
                    // –í –æ–±—ã—á–Ω–æ–º —Ä–µ–∂–∏–º–µ - –≤—ã–∑—ã–≤–∞–µ–º –∫–ª–∏–∫
                    itemClickListener.onItemClick(getCurrentItemId());
                }
            }
        });
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ —á–µ–∫–±–æ–∫—Å
        checkbox.setOnClickListener(v -> {
            int position = getAdapterPosition();
            if (position != RecyclerView.NO_POSITION) {
                int itemId = getCurrentItemId();
                if (itemId != -1) {
                    toggleSelection(itemId);
                }
            }
        });
    }
    
    /**
     * –ü–æ–ª—É—á–∞–µ—Ç ID —Ç–µ–∫—É—â–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
     */
    private int getCurrentItemId() {
        String idTextValue = idText.getText().toString();
        if (idTextValue.startsWith("ID: ")) {
            try {
                return Integer.parseInt(idTextValue.substring(4));
            } catch (NumberFormatException e) {
                android.util.Log.e(TAG, "–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ ID: " + idTextValue);
                return -1;
            }
        }
        return -1;
    }
    
    /**
     * –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –≤—ã–±–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞
     */
    private void toggleSelection(int itemId) {
        if (selectedIds.contains(itemId)) {
            selectedIds.remove(itemId);
        } else {
            selectedIds.add(itemId);
        }
        if (selectionListener != null) {
            selectionListener.onSelectionChanged(selectedIds.size());
        }
    }
    
    /**
     * –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∫ —ç–ª–µ–º–µ–Ω—Ç—É
     */
    public void bind(int position, String title, int id, boolean isSelectionMode, Set<Integer> selectedIds) {
        this.isSelectionMode = isSelectionMode;
        this.selectedIds = selectedIds;
        
        positionText.setText(String.valueOf(position));
        titleText.setText(title);
        idText.setText("ID: " + id);
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —á–µ–∫–±–æ–∫—Å–∞ –∏ —Å–º–µ—â–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
        if (isSelectionMode) {
            // –ü—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ —Ä–µ–∂–∏–º–∞: —Å–º–µ—â–µ–Ω–∏–µ —Å—Ä–∞–∑—É, —á–µ–∫–±–æ–∫—Å —á–µ—Ä–µ–∑ –∑–∞–¥–µ—Ä–∂–∫—É
            animateTextPadding(true, 0);
            
            // –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–æ—è–≤–ª–µ–Ω–∏—è —á–µ–∫–±–æ–∫—Å–∞
            checkbox.postDelayed(() -> {
                animateCheckboxVisibility(true);
            }, CHECKBOX_ANIMATION_DELAY);
            
            checkbox.setChecked(selectedIds.contains(id));
            
        } else {
            // –ü—Ä–∏ –≤—ã–∫–ª—é—á–µ–Ω–∏–∏ —Ä–µ–∂–∏–º–∞: —Å–∫—Ä—ã—Ç–∏–µ —á–µ–∫–±–æ–∫—Å–∞ —Å—Ä–∞–∑—É, —Å–º–µ—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∑–∞–¥–µ—Ä–∂–∫—É
            animateCheckboxVisibility(false);
            
            // –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Å–º–µ—â–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
            positionText.postDelayed(() -> {
                animateTextPadding(false, 0);
            }, TEXT_PADDING_ANIMATION_DELAY);
            
            checkbox.setChecked(false);
        }
    }
    
    /**
     * –ê–Ω–∏–º–∏—Ä—É–µ—Ç –ø–æ—è–≤–ª–µ–Ω–∏–µ/–∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ —á–µ–∫–±–æ–∫—Å–∞
     */
    private void animateCheckboxVisibility(boolean show) {
        if (show) {
            checkbox.setVisibility(View.VISIBLE);
            checkbox.setAlpha(0f);
            
            ObjectAnimator alphaAnimator = ObjectAnimator.ofFloat(checkbox, "alpha", 0f, 1f);
            alphaAnimator.setDuration(CHECKBOX_FADE_IN_DURATION);
            alphaAnimator.start();
            
        } else {
            ObjectAnimator alphaAnimator = ObjectAnimator.ofFloat(checkbox, "alpha", 1f, 0f);
            alphaAnimator.setDuration(CHECKBOX_FADE_OUT_DURATION);
            alphaAnimator.start();
            
            // –°–∫—Ä—ã–≤–∞–µ–º —á–µ–∫–±–æ–∫—Å –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
            checkbox.postDelayed(() -> checkbox.setVisibility(View.GONE), CHECKBOX_FADE_OUT_DURATION);
        }
    }
    
    /**
     * –ê–Ω–∏–º–∏—Ä—É–µ—Ç —Å–º–µ—â–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
     */
    private void animateTextPadding(boolean addPadding, int delay) {
        int targetPadding = addPadding ? 
            (int) (TEXT_PADDING_DP * itemView.getContext().getResources().getDisplayMetrics().density) : 0;
        
        int currentPadding = positionText.getPaddingLeft();
        
        android.util.Log.d(TAG, "üîÑ –ê–Ω–∏–º–∞—Ü–∏—è —Å–º–µ—â–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞: " + 
            currentPadding + " -> " + targetPadding + " (addPadding: " + addPadding + ", delay: " + delay + "ms)");
        
        ValueAnimator paddingAnimator = ValueAnimator.ofInt(currentPadding, targetPadding);
        paddingAnimator.setDuration(TEXT_PADDING_ANIMATION_DURATION);
        paddingAnimator.addUpdateListener(animation -> {
            int animatedValue = (Integer) animation.getAnimatedValue();
            positionText.setPadding(animatedValue, positionText.getPaddingTop(), 
                                 positionText.getPaddingRight(), positionText.getPaddingBottom());
            
            android.util.Log.d(TAG, "üìè –¢–µ–∫—É—â–∏–π –æ—Ç—Å—Ç—É–ø: " + animatedValue);
        });
        
        if (delay > 0) {
            paddingAnimator.setStartDelay(delay);
        }
        paddingAnimator.start();
    }
    
    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç
     */
    public void setItemClickListener(OnItemClickListener listener) {
        this.itemClickListener = listener;
    }
    
    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞
     */
    public void setSelectionListener(OnSelectionChangedListener listener) {
        this.selectionListener = listener;
    }
} 