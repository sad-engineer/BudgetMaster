
package com.sadengineer.budgetmaster.backend.database;

import android.content.Context;
import android.util.Log;

import androidx.room.RoomDatabase;
import androidx.sqlite.db.SupportSQLiteDatabase;

import com.sadengineer.budgetmaster.backend.entity.Account;
import com.sadengineer.budgetmaster.backend.entity.Budget;
import com.sadengineer.budgetmaster.backend.entity.Category;
import com.sadengineer.budgetmaster.backend.entity.Currency;
import com.sadengineer.budgetmaster.backend.entity.Operation;
import com.sadengineer.budgetmaster.backend.constants.ModelConstants;   

import java.time.LocalDateTime;
import java.util.List;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
 */
public class DatabaseInitializer {
    
    private static final String TAG = "DatabaseInitializer";
    private static final ExecutorService executor = Executors.newSingleThreadExecutor();
    

    
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ
     */
    public static void initializeDefaultData(BudgetMasterDatabase database) {
        Log.d(TAG, "üîÑ initializeDefaultData: –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é");
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∞–ª—é—Ç—ã
        initializeDefaultCurrencies(database);
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        initializeDefaultCategories(database);
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—á–µ—Ç–∞
        initializeDefaultAccounts(database);
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±—é–¥–∂–µ—Ç—ã
        initializeDefaultBudgets(database);
        
        Log.d(TAG, "üîÑ initializeDefaultData: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞");
    }
    
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –≤–∞–ª—é—Ç—ã
     */
    private static void initializeDefaultCurrencies(BudgetMasterDatabase database) {
        Log.d(TAG, "üîÑ initializeDefaultCurrencies: –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –≤–∞–ª—é—Ç");
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –≤–∞–ª—é—Ç—ã
        int currencyCount = database.currencyDao().count();
        if (currencyCount > 0) {
            Log.d(TAG, "üîÑ initializeDefaultCurrencies: –í–∞–ª—é—Ç—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º");
            return;
        }
        
        // –°–æ–∑–¥–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –≤–∞–ª—é—Ç—ã
        Currency[] currencies = {
            createCurrency("–†—É–±–ª—å", 1),
            createCurrency("–î–æ–ª–ª–∞—Ä", 2),
            createCurrency("–ï–≤—Ä–æ", 3)
        };
        
        for (Currency currency : currencies) {
            database.currencyDao().insert(currency);
            Log.d(TAG, "üîÑ initializeDefaultCurrencies: –î–æ–±–∞–≤–ª–µ–Ω–∞ –≤–∞–ª—é—Ç–∞: " + currency.getTitle());
        }
        
        Log.d(TAG, "üîÑ initializeDefaultCurrencies: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤–∞–ª—é—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∞");
    }
    
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
     */
    private static void initializeDefaultCategories(BudgetMasterDatabase database) {
        Log.d(TAG, "üîÑ initializeDefaultCategories: –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∫–∞—Ç–µ–≥–æ—Ä–∏–π");
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        int categoryCount = database.categoryDao().count();
        if (categoryCount > 0) {
            Log.d(TAG, "üîÑ initializeDefaultCategories: –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º");
            return;
        }
        
        // –°–æ–∑–¥–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        Category incomeParent = createCategory("–î–æ—Ö–æ–¥—ã", 1, null, 1);
        Category expenseParent = createCategory("–†–∞—Å—Ö–æ–¥—ã", 2, null, 2);
        
        database.categoryDao().insert(incomeParent);
        database.categoryDao().insert(expenseParent);
        
        // –ü–æ–ª—É—á–∞–µ–º ID —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        // Category incomeParentCategory = database.categoryDao().getByTitle("–î–æ—Ö–æ–¥—ã").getValue();
        // Category expenseParentCategory = database.categoryDao().getByTitle("–†–∞—Å—Ö–æ–¥—ã").getValue();
        // int incomeParentId = incomeParentCategory.getId();
        // int expenseParentId = expenseParentCategory.getId();
        int incomeParentId = 1;
        int expenseParentId = 2;
        
        // –°–æ–∑–¥–∞–µ–º –¥–æ—á–µ—Ä–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Ö–æ–¥–æ–≤
        Category[] incomeCategories = {
            createCategory("–†–∞–±–æ—Ç–∞", 1, incomeParentId, 3),
            createCategory("–ü–æ–¥—Ä–∞–±–æ—Ç–∫–∞", 1, incomeParentId, 4),
            createCategory("–ü–æ–¥–∞—Ä–∫–∏", 1, incomeParentId, 5)
        };
        
        for (Category category : incomeCategories) {
            database.categoryDao().insert(category);
        }
        
        // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤
        Category necessary = createCategory("–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ", 2, expenseParentId, 6);
        Category additional = createCategory("–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ", 2, expenseParentId, 7);
        
        database.categoryDao().insert(necessary);
        database.categoryDao().insert(additional);
        
        // –ü–æ–ª—É—á–∞–µ–º ID –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        // Category necessaryCategory = database.categoryDao().getByTitle("–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ").getValue();
        // Category additionalCategory = database.categoryDao().getByTitle("–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ").getValue();
        // int necessaryId = necessaryCategory.getId();
        // int additionalId = additionalCategory.getId();
        int necessaryId = 6;
        int additionalId = 7;
        
        // –°–æ–∑–¥–∞–µ–º –¥–æ—á–µ—Ä–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤
        Category[] necessaryCategories = {
            createCategory("–ö–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ", 2, necessaryId, 8),
            createCategory("–ü—Ä–æ–¥—É–∫—Ç—ã", 2, necessaryId, 9),
            createCategory("–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç", 2, necessaryId, 10),
            createCategory("–ú–µ–¥–∏—Ü–∏–Ω–∞", 2, necessaryId, 11),
            createCategory("–û–¥–µ–∂–¥–∞", 2, necessaryId, 12),
            createCategory("–ù–∞–ª–æ–≥–∏", 2, necessaryId, 13)
        };
        
        for (Category category : necessaryCategories) {
            database.categoryDao().insert(category);
        }
        
        // –°–æ–∑–¥–∞–µ–º –¥–æ—á–µ—Ä–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤
        Category[] additionalCategories = {
            createCategory("–î–æ–º–∞—à–Ω–∏–µ –Ω—É–∂–¥—ã", 2, additionalId, 14),
            createCategory("–ö–∏–Ω–æ", 2, additionalId, 15),
            createCategory("–ö–∞—Ñ–µ –∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã", 2, additionalId, 16),
            createCategory("–ü–æ–¥–∞—Ä–∫–∏", 2, additionalId, 17)
        };
        
        for (Category category : additionalCategories) {
            database.categoryDao().insert(category);
        }
        
        Log.d(TAG, "üîÑ initializeDefaultCategories: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞");
    }
    
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ —Å—á–µ—Ç–∞
     */
    private static void initializeDefaultAccounts(BudgetMasterDatabase database) {
        Log.d(TAG, "üîÑ initializeDefaultAccounts: –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é —Å—á–µ—Ç–æ–≤");
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å—á–µ—Ç–∞
        int accountCount = database.accountDao().count();
        if (accountCount > 0) {
            Log.d(TAG, "üîÑ initializeDefaultAccounts: –°—á–µ—Ç–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º");
            return;
        }
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É DEFAULT_CURRENCY_ID –∏–∑ ModelConstants
        int defaultCurrencyId = ModelConstants.DEFAULT_CURRENCY_ID;
        
        // –°–æ–∑–¥–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ —Å—á–µ—Ç–∞
        Account[] accounts = {
            createAccount("–ù–∞–ª–∏—á–Ω—ã–µ", 1, 0, 1, defaultCurrencyId, 0),
            createAccount("–ó–∞—Ä–ø–ª–∞—Ç–Ω–∞—è –∫–∞—Ä—Ç–∞", 2, 0, 1, defaultCurrencyId, 0),
            createAccount("–°–±–µ—Ä–µ–≥–∞—Ç–µ–ª—å–Ω—ã–π —Å—á–µ—Ç", 3, 0, 2, defaultCurrencyId, 0),
            createAccount("–ö—Ä–µ–¥–∏—Ç–Ω–∞—è –∫–∞—Ä—Ç–∞", 4, 0, 3, defaultCurrencyId, 0),
            createAccount("–ö–∞—Ä—Ç–∞ —Ä–∞—Å—Å—Ä–æ—á–∫–∏", 5, 0, 3, defaultCurrencyId, 0)
        };
        
        for (Account account : accounts) {
            database.accountDao().insert(account);
            Log.d(TAG, "üîÑ initializeDefaultAccounts: –î–æ–±–∞–≤–ª–µ–Ω —Å—á–µ—Ç: " + account.getTitle());
        }
        
        Log.d(TAG, "üîÑ initializeDefaultAccounts: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—á–µ—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞");
    }
    
    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –±—é–¥–∂–µ—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
     */
    private static void initializeDefaultBudgets(BudgetMasterDatabase database) {
        Log.d(TAG, "üîÑ initializeDefaultBudgets: –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –±—é–¥–∂–µ—Ç–æ–≤");
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –±—é–¥–∂–µ—Ç—ã
        int budgetCount = database.budgetDao().count();
        if (budgetCount > 0) {
            Log.d(TAG, "üîÑ initializeDefaultBudgets: –ë—é–¥–∂–µ—Ç—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º");
            return;
        }
        
        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        List<Category> categories = database.categoryDao().getAllSync();
        if (categories == null || categories.isEmpty()) {
            Log.d(TAG, "‚ùå initializeDefaultBudgets: –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –±—é–¥–∂–µ—Ç–æ–≤");
            return;
        }
        
        Log.d(TAG, "üîÑ initializeDefaultBudgets: –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: " + categories.size());
        
        // –°–æ–∑–¥–∞–µ–º –±—é–¥–∂–µ—Ç –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        int position = 1;
        for (Category category : categories) {
            Budget budget = createBudget(category.getId(), 0, 1, position);
            database.budgetDao().insert(budget);
            Log.d(TAG, "üîÑ initializeDefaultBudgets: –î–æ–±–∞–≤–ª–µ–Ω –±—é–¥–∂–µ—Ç –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '" + category.getTitle() + "' (ID: " + category.getId() + ")");
            position++;
        }
        
        Log.d(TAG, "üîÑ initializeDefaultBudgets: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±—é–¥–∂–µ—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞");
    }
    
    /**
     * –°–æ–∑–¥–∞–µ—Ç –æ–±—ä–µ–∫—Ç –≤–∞–ª—é—Ç—ã
     */
    private static Currency createCurrency(String title, int position) {
        Currency currency = new Currency();
        currency.setTitle(title);
        currency.setPosition(position);
        currency.setCreateTime(LocalDateTime.now());
        currency.setCreatedBy("initializer");
        return currency;
    }
    
    /**
     * –°–æ–∑–¥–∞–µ—Ç –æ–±—ä–µ–∫—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
     */
    private static Category createCategory(String title, int operationType, Integer parentId, int position) {
        Category category = new Category();
        category.setTitle(title);
        category.setOperationType(operationType);
        category.setParentId(parentId);
        category.setPosition(position);
        category.setCreateTime(LocalDateTime.now());
        category.setCreatedBy("initializer");
        return category;
    }
    
    /**
     * –°–æ–∑–¥–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Å—á–µ—Ç–∞
     */
    private static Account createAccount(String title, int position, int amount, int type, int currencyId, int closed) {
        Account account = new Account();
        account.setTitle(title);
        account.setPosition(position);
        account.setAmount(amount);
        account.setType(type);
        account.setCurrencyId(currencyId);
        account.setClosed(closed);
        account.setCreateTime(LocalDateTime.now());
        account.setCreatedBy("initializer");
        return account;
    }
    
    /**
     * –°–æ–∑–¥–∞–µ—Ç –æ–±—ä–µ–∫—Ç –±—é–¥–∂–µ—Ç–∞
     */
    private static Budget createBudget(int categoryId, int amount, int currencyId, int position) {
        Budget budget = new Budget();
        budget.setCategoryId(categoryId);
        budget.setAmount(amount);
        budget.setCurrencyId(currencyId);
        budget.setPosition(position);
        budget.setCreateTime(LocalDateTime.now());
        budget.setCreatedBy("initializer");
        return budget;
    }
    
    /**
     * –û—á–∏—â–∞–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã
     */
    public static void clearAllData(BudgetMasterDatabase database) {
        Log.d(TAG, "üîÑ clearAllData: –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö");
        
        database.operationDao().deleteAll();
        database.accountDao().deleteAll();
        database.categoryDao().deleteAll();
        database.currencyDao().deleteAll();
        database.budgetDao().deleteAll();
        
        Log.d(TAG, "üîÑ clearAllData: –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞");
    }
    
    /**
     * –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
     */
    public static void restoreDefaults(BudgetMasterDatabase database) {
        Log.d(TAG, "üîÑ restoreDefaults: –ù–∞—á–∏–Ω–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–µ—Ñ–æ–ª—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö");
        
        // –û—á–∏—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
        clearAllData(database);
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        initializeDefaultData(database);
        
        Log.d(TAG, "üîÑ restoreDefaults: –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ");
    }
} 