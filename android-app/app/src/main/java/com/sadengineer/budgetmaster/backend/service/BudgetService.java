
package com.sadengineer.budgetmaster.backend.service;

import android.content.Context;
import android.util.Log;

import androidx.lifecycle.LiveData;
import androidx.room.Transaction;

import com.sadengineer.budgetmaster.backend.entity.Budget;
import com.sadengineer.budgetmaster.backend.entity.EntityFilter;
import com.sadengineer.budgetmaster.backend.repository.BudgetRepository;

import java.time.LocalDateTime;
import java.util.List;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

/**
 * Service –∫–ª–∞—Å—Å –¥–ª—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏ —Ä–∞–±–æ—Ç—ã —Å Budget
 */
public class BudgetService {
    private static final String TAG = "BudgetService";
    
    private final BudgetRepository repo;
    private final ExecutorService executorService;
    private final String user;
    
    public BudgetService(Context context, String user) {
        this.repo = new BudgetRepository(context);
        this.executorService = Executors.newFixedThreadPool(4);
        this.user = user;
    }

    /**
     * –ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é –±—é–¥–∂–µ—Ç–∞
     * @param budget –±—é–¥–∂–µ—Ç
     * @param newPosition –Ω–æ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è
     */
    public void changePosition(Budget budget, int newPosition) {
        executorService.execute(() -> {
            changePositionInTransaction(budget, newPosition);
        });
    }
    
    /**
     * –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏ –±—é–¥–∂–µ—Ç–∞
     * @param budget –±—é–¥–∂–µ—Ç
     * @param newPosition –Ω–æ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è
     */
    @Transaction
    private void changePositionInTransaction(Budget budget, int newPosition) {
        int oldPosition = budget.getPosition();
        
        // –ï—Å–ª–∏ –ø–æ–∑–∏—Ü–∏—è –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
        if (oldPosition == newPosition) {
            return;
        }
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥—ã —Å–¥–≤–∏–≥–∞ –ø–æ–∑–∏—Ü–∏–π –∏–∑ Repository
        if (oldPosition < newPosition) {
            repo.shiftPositionsDown(oldPosition);
            repo.shiftPositionsUp(newPosition + 1);
        } else {
            repo.shiftPositionsUp(newPosition);
            repo.shiftPositionsDown(oldPosition);
        }
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—É—é –ø–æ–∑–∏—Ü–∏—é –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –±—é–¥–∂–µ—Ç–∞
        budget.setPosition(newPosition);
        repo.update(budget);
    }
    
    /**
     * –ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é –±—é–¥–∂–µ—Ç–∞ –ø–æ —Å—Ç–∞—Ä–æ–π –ø–æ–∑–∏—Ü–∏–∏
     * @param oldPosition —Å—Ç–∞—Ä–∞—è –ø–æ–∑–∏—Ü–∏—è
     * @param newPosition –Ω–æ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è
     */
    public void changePosition(int oldPosition, int newPosition) {
        Budget budget = repo.getByPosition(oldPosition).getValue();
        if (budget != null) {
            changePosition(budget, newPosition);
        }
    }
    
    /**
     * –ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é –±—é–¥–∂–µ—Ç–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
     * @param category_id ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏  
     * @param newPosition –Ω–æ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è
     */
    // public void changePosition(int category_id, int newPosition) {
    //     Budget budget = repo.getByCategory(category_id).getValue();
    //     if (budget != null) {
    //         changePosition(budget, newPosition);
    //     }
    // }

    /**
     * –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –±—é–¥–∂–µ—Ç
     * @param category_id ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä, –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º)
     * @param amount —Å—É–º–º–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä, –ø–µ—Ä–µ–ª–∞–π—Ç–µ null, –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (0))
     * @param currency_id ID –≤–∞–ª—é—Ç—ã (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä, –ø–µ—Ä–µ–ª–∞–π—Ç–µ null, –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (1))
     */
    public void create(int category_id, Integer amount, Integer currency_id) {
        if (category_id <= 0) {
            throw new IllegalArgumentException("ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º");
        }

        executorService.execute(() -> {
            try {
                // –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –í–ù–£–¢–†–ò lambda
                int finalAmount = amount;
                int finalCurrencyId = currency_id;
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —Å—É–º–º–∞ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–∞, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                if (amount == null || amount <= 0) {
                    Log.d(TAG, "–î–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ " + category_id + " –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—É–º–º—ã, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é");
                    finalAmount = 0;
                }
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ ID –≤–∞–ª—é—Ç—ã –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                if (currency_id == null || currency_id <= 0) {
                    Log.d(TAG, "–î–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ " + category_id + " –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ ID –≤–∞–ª—é—Ç—ã, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é");
                    finalCurrencyId = 1;
                }
                
                createBudgetInTransaction(category_id, finalAmount, finalCurrencyId);
            } catch (Exception e) {
                Log.e(TAG, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±—é–¥–∂–µ—Ç–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ " + category_id + ": " + e.getMessage(), e);
            }
        });
    }
    
    /**
     * –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –±—é–¥–∂–µ—Ç–∞
     * @param category_id ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
     * @param amount —Å—É–º–º–∞
     * @param currency_id ID –≤–∞–ª—é—Ç—ã
     */
    @Transaction
    private void createBudgetInTransaction(int category_id, Integer amount, Integer currency_id) {
        Log.d(TAG, "üîÑ –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ " + category_id);
        Budget budget = new Budget();
        budget.setCategoryId(category_id);
        budget.setAmount(amount);
        budget.setCurrencyId(currency_id);
        budget.setPosition(repo.getMaxPosition() + 1);
        budget.setCreateTime(LocalDateTime.now());
        budget.setCreatedBy(user);
        repo.insert(budget);
        Log.d(TAG, "‚úÖ –ë—é–¥–∂–µ—Ç –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ " + budget.getCategoryId() + " —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω");
    }

    /**
     * –£–¥–∞–ª–∏—Ç—å –±—é–¥–∂–µ—Ç (–ø–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ - —É–¥–∞–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –∏–∑ –ë–î)
     * @param budget –±—é–¥–∂–µ—Ç
     */
    private void delete(Budget budget) {
        if (budget == null) {
            Log.e(TAG, "‚ùå –ë—é–¥–∂–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è. –£–¥–∞–ª–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ");
            return;
        }

        executorService.execute(() -> {
            try {
                deleteBudgetInTransaction(budget);
            } catch (Exception e) {
                Log.e(TAG, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –±—é–¥–∂–µ—Ç–∞: " + e.getMessage(), e);
            }
        });
    }
    
    /**
     * –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –±—é–¥–∂–µ—Ç–∞
     * @param budget –±—é–¥–∂–µ—Ç
     */
    @Transaction
    private void deleteBudgetInTransaction(Budget budget) {
        Log.d(TAG, "üîÑ –ó–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ " + budget.getCategoryId());
        int deletedPosition = budget.getPosition();
        repo.delete(budget);
        Log.d(TAG, "‚úÖ –ë—é–¥–∂–µ—Ç –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ " + budget.getCategoryId() + " —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω");
    }

    /**
     * –£–¥–∞–ª–∏—Ç—å –±—é–¥–∂–µ—Ç (–ø–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ - —É–¥–∞–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –∏–∑ –ë–î)
     * @param softDelete true - soft delete, false - –ø–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ
     * @param budget –±—é–¥–∂–µ—Ç
     */
    public void delete(boolean softDelete, Budget budget) {
        if (softDelete) {
            softDelete(budget);
        } else {
            delete(budget);
        }
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –±—é–¥–∂–µ—Ç—ã
     * @param filter —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –≤—ã–±–æ—Ä–∫–∏ –±—é–¥–∂–µ—Ç–æ–≤
     * @return LiveData —Å–æ —Å–ø–∏—Å–∫–æ–º –≤—Å–µ—Ö –±—é–¥–∂–µ—Ç–æ–≤
     */
    public LiveData<List<Budget>> getAll(EntityFilter filter) {
        return repo.getAll(filter);
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –±—é–¥–∂–µ—Ç—ã (–≤–∫–ª—é—á–∞—è —É–¥–∞–ª–µ–Ω–Ω—ã–µ)
     * @return LiveData —Å–æ —Å–ø–∏—Å–∫–æ–º –≤—Å–µ—Ö –±—é–¥–∂–µ—Ç–æ–≤
     */
    public LiveData<List<Budget>> getAll() {
        return repo.getAll();
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –±—é–¥–∂–µ—Ç –ø–æ ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
     * @param category_id ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
     * @return LiveData —Å –±—é–¥–∂–µ—Ç–æ–º
     */
    public LiveData<Budget> getByCategory(int category_id) {
        return repo.getByCategory(category_id);
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –±—é–¥–∂–µ—Ç –ø–æ ID
     * @param id ID –±—é–¥–∂–µ—Ç–∞
     * @return LiveData —Å –±—é–¥–∂–µ—Ç–æ–º
     */
    public LiveData<Budget> getById(int id) {
        return repo.getById(id);
    }

    /**
     * –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —É–¥–∞–ª–µ–Ω–Ω—ã–π –±—é–¥–∂–µ—Ç (soft delete)
     * @param deletedBudget —É–¥–∞–ª–µ–Ω–Ω—ã–π –±—é–¥–∂–µ—Ç
     */
    public void restore(Budget deletedBudget) {
        executorService.execute(() -> {
            try {
                restoreBudgetInTransaction(deletedBudget);
            } catch (Exception e) {
                Log.e(TAG, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –±—é–¥–∂–µ—Ç–∞: " + e.getMessage(), e);
            }
        });
    }
    
    /**
     * –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –±—é–¥–∂–µ—Ç–∞
     * @param deletedBudget —É–¥–∞–ª–µ–Ω–Ω—ã–π –±—é–¥–∂–µ—Ç
     */
    @Transaction
    private void restoreBudgetInTransaction(Budget deletedBudget) {
        if (deletedBudget != null) {
            Log.d(TAG, "üîÑ –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ " + deletedBudget.getCategoryId());
            deletedBudget.setPosition(repo.getMaxPosition() + 1);
            deletedBudget.setDeleteTime(null);
            deletedBudget.setDeletedBy(null);
            deletedBudget.setUpdateTime(LocalDateTime.now());
            deletedBudget.setUpdatedBy(user);
            repo.update(deletedBudget);
            Log.d(TAG, "‚úÖ –ë—é–¥–∂–µ—Ç –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ " + deletedBudget.getCategoryId() + " —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω");
        } else {
            Log.e(TAG, "‚ùå –ë—é–¥–∂–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è");
        }
    }

    /**
     * –£–¥–∞–ª–∏—Ç—å –±—é–¥–∂–µ—Ç (soft delete)
     * @param budget –±—é–¥–∂–µ—Ç
     */
    private void softDelete(Budget budget) {
        if (budget == null) {
            Log.e(TAG, "‚ùå –ë—é–¥–∂–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è soft delete. –£–¥–∞–ª–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ");
            return;
        }   

        executorService.execute(() -> {
            try {
                softDeleteBudgetInTransaction(budget);
            } catch (Exception e) {
                Log.e(TAG, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ soft delete –±—é–¥–∂–µ—Ç–∞: " + e.getMessage(), e);
            }
        });
    }
    
    /**
     * –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –±—é–¥–∂–µ—Ç–∞ (soft delete)
     * @param budget –±—é–¥–∂–µ—Ç
     */
    @Transaction
    private void softDeleteBudgetInTransaction(Budget budget) {
        Log.d(TAG, "üîÑ –ó–∞–ø—Ä–æ—Å –Ω–∞ softDelete –±—é–¥–∂–µ—Ç–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ " + budget.getCategoryId());
        int deletedPosition = budget.getPosition();
        budget.setPosition(0);
        budget.setDeleteTime(LocalDateTime.now());
        budget.setDeletedBy(user);
        repo.update(budget);
        // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏–∏ –ø–æ—Å–ª–µ soft delete
        repo.shiftPositionsDown(deletedPosition);
        Log.d(TAG, "‚úÖ –ë—é–¥–∂–µ—Ç –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ " + budget.getCategoryId() + " —É—Å–ø–µ—à–Ω–æ soft deleted");
    }

    /**
     * –û–±–Ω–æ–≤–∏—Ç—å –±—é–¥–∂–µ—Ç
     * @param budget –±—é–¥–∂–µ—Ç
     */
    public void update(Budget budget) {
        if (budget == null) {
            Log.e(TAG, "‚ùå –ë—é–¥–∂–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ");
            return;
        }

        executorService.execute(() -> {
            try {
                Log.d(TAG, "üîÑ –ó–∞–ø—Ä–æ—Å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ " + budget.getCategoryId());
                budget.setUpdateTime(LocalDateTime.now());
                budget.setUpdatedBy(user);
                repo.update(budget);
                Log.d(TAG, "‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ " + budget.getCategoryId() + " —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω");
            } catch (Exception e) {
                Log.e(TAG, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –±—é–¥–∂–µ—Ç–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ " + budget.getCategoryId() + ": " + e.getMessage(), e);
            }
        });
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—é–¥–∂–µ—Ç–æ–≤
     * @param filter —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –≤—ã–±–æ—Ä–∫–∏ –±—é–¥–∂–µ—Ç–æ–≤
     * @return –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—é–¥–∂–µ—Ç–æ–≤
     */
    public int getCount(EntityFilter filter) {
        return repo.getCount(filter);
    }
    
    /**
     * –ü–æ–ª—É—á–∏—Ç—å –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—é–¥–∂–µ—Ç–æ–≤ (–≤–∫–ª—é—á–∞—è —É–¥–∞–ª–µ–Ω–Ω—ã–µ)
     * @return –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—é–¥–∂–µ—Ç–æ–≤
     */
    public int getCount() {
        return repo.getCount();
    }
    
    /**
     * –ó–∞–∫—Ä—ã—Ç—å ExecutorService
     */
    public void shutdown() {
        executorService.shutdown();
    }
} 